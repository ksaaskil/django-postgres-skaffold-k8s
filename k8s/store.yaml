apiVersion: v1
kind: Service
metadata:
  name: django-store-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
  type: NodePort
  selector:
    app: store
---
# https://stackoverflow.com/questions/42078080/add-nginx-conf-to-kubernetes-cluster/42078899
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |

    # user nobody nogroup;
    # 'user nobody nobody;' for systems with 'nobody' as a group instead
    error_log  /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024; # increase if you have lots of clients
      accept_mutex off; # set to 'on' if nginx worker_processes > 1
      # 'use epoll;' to enable for Linux 2.6+
      # 'use kqueue;' to enable for FreeBSD, OSX
    }
    http {
      upstream django {
        server localhost:8000;
      }

      server {
        listen 8080;

        location / {
          proxy_pass http://django;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store
spec:
  selector:
    matchLabels:
      app: store
  template:
    metadata:
      labels:
        app: store
    spec:
      containers:
        - name: store
          image: django-store
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-configuration
        - name: store-nginx
          image: nginx:1.16.1
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          ports:
            - containerPort: 8080
      initContainers:
        - name: init-store-container
          image: busybox:1.28
          # Ugly hack to wait for fixed time before starting Django
          command: ["sh", "-c", "echo Sleeping... && sleep 1 && echo Done."]
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
# Ugly hack to run Django migrations with a Kubernetes job
# Should not be run automatically in any real environment
apiVersion: batch/v1
kind: Job
metadata:
  name: django-migrations-job
spec:
  backoffLimit: 5
  template:
    spec:
      containers:
        - name: django-migration
          image: django-store
          command: ["python", "manage.py", "migrate"]
          env:
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-configuration
      restartPolicy: Never
